[{"url":"/","title":"Mixeway Docs","breadcrumbs":[{"title":"Mixeway Docs","url":"/"}],"content":"\n\n# Mixeway <img src=\"https://mixeway.github.io/img/logo_dashboard.png\" height=\"60px\">\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/getting-started/","title":"Getting Started","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Getting Started","url":"/getting-started/"}],"content":"\n# Gettings started with Mixeway\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/mixeway-info/release-notes/","title":"Release Notes","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Mixeway Information"},{"title":"Release Notes","url":"/mixeway-info/release-notes/"}],"content":"\n# Release notes\n\n## 1.6.1 (2022-05-07)\n\n#### Bug Fixes\n* Fixed bug that allow to perform multiple sast scans of same project. Fixed status management, now when specific codeproject has inqueue or running state equal to true, it cannot be put on queue (https://github.com/Mixeway/MixewayBackend/issues/82)\n* Fixed bug related with improper view of the status in codeproject opensource scanner integration (https://github.com/Mixeway/MixewayFrontend/issues/57)\n\n\n## 1.6.0 (2022-04-25)\n#### New Features\n* New widget on show-project page\n* Removed CodeGroup concept in favor of CodeProject only\n* Integration tests of MixewayBackend\n\n#### Bug Fixes\n* Security updates in Backend & Frontend\n* Fixed problem related with errors when Vault integration is disabled\n\n## 1.5.0 (2021-12-16)\n#### New Features\n* New main dashboard\n* New project dashboard\n\n#### Bug Fixes\n* Adjusted and fixed problems with Checkmarx scans\n\n## 1.4.1 (2021-03-10)\n#### New Features\n* Possibility to configure global git credentials (url + username:password) for SAST plugins\n\n#### Bug Fixes\n* Fixed window with editing of source code repository values\n\n## 1.4.0 (2021-01-18)\n#### New Features\n* Adding REST Endpoint which return result of Security Quaility Gateway for particular Code Repository\n* Added Orange Poland Logo\n* Knowlege base - possibility to create custom severity for vulnerabilities\n* Openscap support for CIS Benchmark\n\n#### Bug Fixes\n* Fixing CI Script to fit newest version of MixewayBackend\n\n## 1.3.5 (2020-11-26)\n#### Bug Fixes\n* Fixing CI Script to fit newest version of MixewayBackend\n\n## 1.3.4 (2020-09-02)\n\n#### New Features\n* New Methods for CICD integration with Mixeway Scanner\n\n## 1.3.3 (2020-08-23)\n\n#### New Features\n* User Profile eidition (change password)\n* Dark mode enabled (change in user profile)\n* Update to Angular 10 and ngx-admin 6.0.0\n* Intorduced role CICD and possibility to generate CICD Api Key for standard users\n* Introduced new methods for interacting with CICD\n\n\n#### Bug Fixes\n* Fixed a bug with project name display during confirmation of deletion\n* Fixed a bug with not reloading proxy and routing domain in admin zone. No refresh is now required.\n\n## 1.3.2 (2020-07-23)\n\n#### Bug Fixes\n* Fixed Bug related with running scan on GVM (scope single, multiple asset)\n* Fixed logging during running scans on GVM\n* Fixed Bug related with problems in using Vuln Auditor\n\n\n## 1.3.1 (2020-07-16)\n\n#### New Features\n* Configurable Security Quality Gateway (accessible from settings)\n* AWS EC2 Integration in terms of assets information loading\n\n## 1.3.0 (2020-05-31)\n\n#### New Features\n\n* Mixeway Vuln Auditor - DeepLearning microservice which use Neural Network to classify software vulnerabilities\n* Vulnerability Description is displayed in more proper manner. Modal displaying details is allowing user to confirm or\n  deny vulnerability\n* Possibility to create Application profile, on both project or asset level information gathered and put into profile\n  helps Vuln Auditor to better understand application context and then classify vulnerability\n\n#### Bug Fixes\n* Tables filtering set to proper level. Whenever possible select fields are possible to show.\n* Vulnerabilities are no longer deleted before loading from scanner. ID of detected vulnerability is constant, vulnerability is deleted\n  only if it is not detected in next scan.\n\n#### Removed Features\n* Partitioning software vulnerabilities was removed, in this place single tab is displayed with colum which allows to filter\n\n## 1.2.3 (2020-04-26)\n\n#### Bug Fixes\n\n* Fixed problem with saving users with permissions of Admin and Editor \n* Fixed problem with saving properly CodeGroup with no dependant CodeProject\n\n\n## 1.2.2 (2020-04-26)\n\n#### New Features\n\n* Possibility to set enable vuln manage option on project level. Setting this option to false will result\n  in hiding vulnerabilities and not returning them through Global API (but getting vulnerabilities per\n  specific project will still works) see also \n\n#### Bug Fixes\n\n* Fixed problem when search widget did not work as expected see also\n\n## 1.2.1 (2020-04-05)\n\n#### New Features\n\n* Frontend updated to Angular 9\n* Frontend updated to Ngx-Admin 5\n* Global statistics for OpenSource Vulnerabilities\n* Possibility to create Password Authentication for Web Application scans (based on username and password passed later to scanner)\n\n## 1.2.0 (2020-04-03)\n\n#### New Features\n\n* Integration with Burp Enterprise Edition\n\n#### BUG Fixes\n* Routing Domain is no longer required while scanner creation\n* Risk of project, codeProject, WebApp and asset is now created in offline. Fixed problem in long execution time.\n* Code of integration partially refactored\n\n\n## 1.1.0 (2020-03-20)\n\n#### New Features\n\n* Bash script ready to integrate with CI tools (scripts/CIScript/mixeway-ci)\n* New view for checking CI Job status and state\n\n#### Bug Fixes\n* Fixed problem with refreshing repository table after creating object\n* Fixed problem with disappearing SAST and OpenSource integration fields once one of them was done\n\n## 1.0.0 (2020-03-04)\n\n#### New Features\n\n* Hashicorp Vault integration is now optional\n\n#### BUG Fixes\n* Tutorial translation\n* Sonar bugs fixes\n\n## 0.9.2 (2020-02-08)\n\n#### New Features\n\n* REST API to get scanner types already integrated\n* Checkmarx integration (scope: create project, configure scan, run sca, get vulnerabilities)\n* Extended Fortify SSC integration - possibility to create and configure SSC projects via Mixeway\n\n#### BUG Fixes\n* Fixed bug related with deletion of scanners\n\n\n# v0.9.1 (30.01.2020)\n\n#### New Features\n- Integration with OWASP Dependency track with scope of loading vulnerabilities\n- Added scope to Security Quality Gateway with WebApp Vulns, Code Vulns and OpenSource vulns\n- Possibility to set scheduler settings (cron expression) from admin->settings panel.\n  Scheduler can be configured for task related with scheduled scans.\n\n#### BUG Fixes\n\n- Fix long time of loading tables containing risk calculations\n- Fixed problem with filtering and sorting of some columns in tables of Project Details\n- Fixed problem with JIRA ticket creation"},{"url":"/mixeway-info/integrations/","title":"Integrations","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Mixeway Information"},{"title":"Integrations","url":"/mixeway-info/integrations/"}],"content":"\n# Integrations\n\nMixeway is a software which is hub for security tools. It aims at integrating with tools security team use,\nand DevOps team use so the whole process of software development could be secured.\n\nLong story short it is all about integrations.\n\n### IaaS Integrations\nUsing IaaS integration Mixeway can download information about particular project with data like: IP addresses,\nhostnames, security group rules and more. Those data are being use to enable continuously scan whole infrastructure\nwithout even touching vulnerability scanner.\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/openstack.png\" height=\"50px\">\n\n**_Planned for the future release:_**\n\n<img src=\"https://mixeway.github.io/img/aws.png\" height=\"50px\">\n<img src=\"https://mixeway.github.io/img/gcp.jpg\" height=\"50px\">\n\n\n### Network Scanning integrations\nUsing network scanning integrations Mixeway can automatically run scans basing on provided information\n(gathered by API, IaaS plugin or entered manually).\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/nessus.png\" height=\"50px\">\n<img src=\"https://mixeway.github.io/img/nexpose.png\" height=\"50px\">\n<img src=\"https://mixeway.github.io/img/openvas.jpg\" height=\"50px\">\n\n\n\n### WebApplication Scanning Integrations\nUsing WebApplication Mixeway can automatically run scans basing on provided information\n(gathered by API or from network scan - from detected server wwww).\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/acunetix.jpg\" height=\"50px\">\n\n\n\n### Source Code Security Audit:\nUsing Source Code Security Audit Mixeway can automatically run manage SAST scans by the API and jenins plugin.\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/fortify.jpg\" height=\"50px\">\n\n**_Planned for the future release:_**\n\n<img src=\"https://mixeway.github.io/img/checkmarx.png\" height=\"50px\">\n\n\n\n### OpenSource Audits:\nUsing OpenSource plugins Mixeway can download results from OpenSource scans which is crucial source of information\nfor security quality gateway.\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/depcheck.png\" height=\"50px\">\n\n\n\n### CIS Compliance\nMixeway can also download results of CIS Compliance benchmark. <img src=\"https://mixeway.github.io/img/cis.png\" height=\"50px\">\n\n\n**_Avaliable integrations:_**\n- Kubernetes benchmark\n- Docker benchmark\n\n\n### Other integrations\nMixeway integrates with BugTracking systems in order to automatically provide information about found\nvulnerabilities and CICD to properly introduce security quality gateway\n\n**_Avaliable integrations:_**\n\n<img src=\"https://mixeway.github.io/img/jenkins.jpg\" height=\"50px\">\n<img src=\"https://mixeway.github.io/img/jira.jpg\" height=\"50px\">"},{"url":"/mixeway-info/update-instruction/","title":"Update Instruction","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Mixeway Information"},{"title":"Update Instruction","url":"/mixeway-info/update-instruction/"}],"content":"# Update Instruction\n\nMixeway is designed and implemented in a consistent manner. \n\nUsage of Mixeway is based on running properly prepared container. Mixeway application that is running in the backend is dealing with migration policies.\n\n**You are safe to update from any version of Mixeway to any newer version.**\n\nNote: reverting from newer version to the older one is not supported and may corrupt the database.\n\nIn order to update mixeway simply `pull` newer container image and then deploy it to Your environment, e.g.:\n\n```shell\ndocker-compose pull\ndocker-compose up -d\n```"},{"url":"/mixeway-info/licensing/","title":"Licensing","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Mixeway Information"},{"title":"Licensing","url":"/mixeway-info/licensing/"}],"content":"# Licensing\n\nMixeway is licensed under `GPL-3.0` license which means:\n\n<img src=\"https://mixeway.github.io/img/license.png\">\n\n## Mixeway Vuln Auditor License\nAlthough Mixeway as Vulnerability Management System and tool orchestrator is an open source software shared under `GPC-3.0` license, Mixeway Vuln Auditor which is \nArtificial Intelligence that help to prioritize detected threats by categorizing vulnerabilities into one of the two classes - the one that require fixing and the problems that may be not relevant.\n\n[In order to ask for the license, demo or a PoC use a connect form.](https://mixeway.io/vuln-auditor-trial-request)"},{"url":"/scan-manager/scan-manager-description/","title":"Scan Manager Description","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Scan Manager Configuration"},{"title":"Scan Manager Description","url":"/scan-manager/scan-manager-description/"}],"content":"# Scan Manager Description\n\nOne of the most important goals of Mixeway is to simplify day to day work of Security Professionals by orchestrate and automate the most generic stuff like:\n* Configure and run vulnerability scan\n* review created scan results\n* Inform dev team about findings\n\nGenerally Scan Manager of Mixeway works as described at the image bellow\n\n<img src=\"https://mixeway.github.io/img/scan_manager.png\">\n\n1. Define Scan Scope- it can be done manually via GUI, whenever needed user can manually define what he wants to scan and when he wants to run it. Other options is to use `REST API` that can be fired by any event e.g. in `CICD` pipeline.\n2. Configure Scan on Vulnerability Scanner - Mixeway has multiple scanner plugins that help to interact with number of security tools. From user perspective it is transparent as You want to run scan for `https://example.com`. It doens't matter which scanner You are using. Mixeway is handling the transition in the background for You.\n3. Run Scan - scan execution (including possible queues and thresholding)\n4. Loading Vulnerabilities - After mixeway verify that started scan is completed it downloads results and put them in database."},{"url":"/configuration/","title":"Configuration","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Configuration","url":"/configuration/"}],"content":"# Basic Configuration\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/installation/","title":"Installation","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Installation","url":"/installation/"}],"content":"\n# Installation\n\nMixeway is deployed as a docker image. Base installation contains 3 containers:\n* [MixewayBackend](https://hub.docker.com/repository/docker/mixeway/backend)\n* [MixewayFrontend](https://hub.docker.com/repository/docker/mixeway/frontend)\n* [PostgreSQL Database](https://hub.docker.com/_/postgres)\n\n## Requirements\n* `docker-compose`\n* wget/curl\n* unzip\n\n# Setup Mixeway\n\n```bash\n# Create project directory\nmkdir mixeway && cd \"$_\"\n# Download latest release\nwget https://github.com/Mixeway/MixewayHub/releases/download/v1.6.3/MixewayHub.zip\n# Unzip contents\nunzip MixewayHub.zip\n# Run startup script\n./startup.sh\n# Run application\ndocker-compose up\n```\n\n`startup.sh` script is preparing environment variable and create self-signed certificates. As a result file with content is created:\n\n```bash\nFRONTEND_URL=https://localhost\nKEYALIAS=localhost\nTRUSTPASS=changeit\nP12PASS=changeit\nPROFILE=prod\nCERTIFICATE=/pki/cert.crt\nPRIVATEKEY=/pki/private.key\nVAULT_ENABLED=false\n```\n\n## All possible values in environments file\n\n| Name | Required | Default | Description | \n|------|----------|---------|-------------|\n| FRONTEND_URL | required | - | URL under which site will be avaliable to users |\n| KEYALIAS | required | - | alias of the key in generated java key store |\n| TRUSTPASS | require | - | password to the truststore |\n| P12PASS | required | - | password to pkcs12 file with certificate and private key |\n| PROFILE | required | prod | profile used, avaliable options `prod` and `keycloak` |\n| CERTIFICATE | required | - | path to the certificate in container |\n| PRIVATEKEY | required | - | path to the private key in container |\n| DB_URL | required | jdbc:postgresql:// MixerDB:5432/mixer | connection string to DB | \n| DB_USER | required | mixeruser | DB user |\n| DB_PASSWORD | required | mixerpassword | DB password |\n| **Vault configuration**  ||||\n| VAULT_ENABLED | required | true | define if Vault will be used for password storing  |\n| VAULT_TOKEN | not required | - | if `VAULT_ENABLED=true` token to authenticate in vault  |\n| VAULT_SCHEME | not required | http | if `VAULT_ENABLED=true` protocol used to communicate with vault  |\n| VAULT_APP_NAME | not required | - | if `VAULT_ENABLED=true` Appname in vault |\n| VAULT_HOST | not required | - | if `VAULT_ENABLED=true` hostname of vault |\n| VAULT_PORT | not required | 8200 | if `VAULT_ENABLED=true` port of vault |\n| VAULT_PATH | not required | secret/ | if `VAULT_ENABLED=true` path of where secrets will be stored |\n| VAULT_PATH | not required | secret/ | if `VAULT_ENABLED=true` path of where secrets will be stored |\n| **Social login configuration**  ||||\n| FACEBOOK_APP_ID | not required | - | APP_ID in facebook if want to use login with facebook |\n| FACEBOOK_APP_ID | not required | - | FACEBOOK_APP_ID in facebook if want to use login with facebook |\n| GITHUB_APP_ID | not required | - | GITHUB_APP_ID in github if want to use login with github |\n| GITHUB_SECRET | not required | - | GITHUB_SECRET in github if want to use login with github |\n| **Keycloak login configuration**  ||||\n| KEYCLOAK_REALM | not required | - | if `PROFILE=keycloak` realm used by keycloak |\n| KEYCLOAK_URL | not required | - | if `PROFILE=keycloak` URL of keycloak |\n| KEYCLOAK_SSL | not required | external | if `PROFILE=keycloak` encryption schema |\n| KEYCLOAK_CLIENT_ID | not required | - | if `PROFILE=keycloak` keycloak client id |\n| KEYCLOAK_SECRET | not required | - | if `PROFILE=keycloak` keycloak secret id |\n\n# Hashicorp Vault Integration\n\nMixeway is orchestration platform and as such it require to be able to communicate with number of security tools. It is recommended\nto use Hashicorp Vault as a place where Mixeway will store passwords for security tools integrated with Mixeway. This way Mixeway will put password to vault\nand get it anytime it will be used. ** Without this integration passwords to vulnerability scanners will be stored in clear text in database**. You will see notification in logs:\n\n```bash\n####################################################################################################################\n#                                                   WARRNING!                                                      #\n#                                         Vault Configuration is not set                                           #\n#                                         Scanner passwords will be stored                                         #\n#                                         in clear text. It is recommended                                         #\n#                                         To use vault.                                                            #\n#                                         Read Mixeway docummentation                                              #\n####################################################################################################################\n```\n\nIn order to enable such integration simply put:\n\n```bash\nVAULT_ENABLED=true\nVAULT_TOKEN={token}\nVAULT_SCHEME=https\nVAULT_APP_NAME=mixeway\nVAULT_HOST=localhost\nVAULT_PORT=8200\n```\n\nat the end of `environments file`"},{"url":"/scan-manager/benchmarks/","title":"Benchmarks","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Scan Manager Configuration"},{"title":"Benchmarks","url":"/scan-manager/benchmarks/"}],"content":"# Scan Manager - Benchmarks\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/scan-manager/code-scan/","title":"Code Scan","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Scan Manager Configuration"},{"title":"Code Scan","url":"/scan-manager/code-scan/"}],"content":"# Scan Manager - Code Repository\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/advanced-config/","title":"Advanced Config","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Advanced Config","url":"/advanced-config/"}],"content":"# Advanced Configuration\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/scan-manager/webapp-scan/","title":"Webapp Scan","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Scan Manager Configuration"},{"title":"Webapp Scan","url":"/scan-manager/webapp-scan/"}],"content":"# Scan Manager - Web Applications\n\nUsing WebApplication Mixeway can automatically run scans basing on provided information\n(gathered by API or from network scan - from detected server wwww).\n\n\n> By the WebApp we mean running application that is available at some specific URL: e.g. https://example.com\n\n\n## Linking Mixeway to avaliable Web Application scanner\n[View available DAST integrations](/mixeway-info/integrations)\n\nGo to Admin zone:\n<img src=\"https://mixeway.github.io/img/acunetix_add0.gif\" height=\"400px\">\n\nAnd create scanner with given type:\n<img src=\"https://mixeway.github.io/img/acunetix_add.gif\" height=\"400px\">\n\nEach scanner require different type of input data in general. It depends on how particular software handling authorization. Sometimes it is just username/password, single API Key or pair of API Keys\n\n## Scan defining\n\nThere are two ways of defining Web Application security scan. One is manually via GUI:\n\n<img src=\"https://mixeway.github.io/img/newwebapp.gif\" height=\"400px\">"},{"url":"/scan-manager/network-scan/","title":"Network Scan","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Scan Manager Configuration"},{"title":"Network Scan","url":"/scan-manager/network-scan/"}],"content":"# Scan Manager - Network\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/cloud-security/","title":"Cloud Security","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Cloud Security","url":"/cloud-security/"}],"content":"# Cloud Security\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/vuln-auditor/general-info/","title":"General Info","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Vulnerability Auditor"},{"title":"General Info","url":"/vuln-auditor/general-info/"}],"content":"# General Information\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/vuln-auditor/configuration/","title":"Configuration","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Vulnerability Auditor"},{"title":"Configuration","url":"/vuln-auditor/configuration/"}],"content":"# Configuration\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/collaboration/","title":"Collaboration","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Collaboration","url":"/collaboration/"}],"content":"# Collaboration\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/cicd/","title":"Cicd","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Cicd","url":"/cicd/"}],"content":"# Mixeway in CICD\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/rest-api/","title":"Rest API","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Rest API","url":"/rest-api/"}],"content":"# Rest API\n\n> Documentations are under migration, sorry for the inconvenience."},{"url":"/support/","title":"Support","breadcrumbs":[{"title":"Mixeway Docs","url":"/"},{"title":"Support","url":"/support/"}],"content":"# Support\n\n> Documentations are under migration, sorry for the inconvenience."}]
